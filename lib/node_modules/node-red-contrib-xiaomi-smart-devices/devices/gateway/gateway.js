'use strict';

module.exports = function (RED) {

  /**
   * @param {Object} config
   * @constructor
   */
  function XiaomiGatewayNode(config) {
    RED.nodes.createNode(this, config);
    this.sid = null;
    this.healthcheck = config.healthcheck * 1000 || 60000;
    this.lastMsgTime = Date.now();
    this.gateway = RED.nodes.getNode(config.gateway);

    if (this.gateway) {
      //initial status
      this.status({fill: 'grey', shape: 'ring', text: 'not connected'});

      const self = this;
      setInterval(() => {
        if (Date.now() - self.lastMsgTime > self.healthcheck) {
          console.log(JSON.stringify({ level: 'info', message: 'DEVICE_OFFLINE' }));
          self.status({fill: 'grey', shape: 'ring', text: 'not connected'});
          self.send([{
            payload: {
              cmd: 'disconnected',
              model: 'gateway'
            }
          }]);
        }
      }, 10000);

      //listen for the gateway messages
      this.gateway.on('message', (input) => {
        let msg = Object.assign({}, input);
        let payload = msg.payload;

        switch (payload.cmd) {
          case 'heartbeat':
            this.sid = payload.sid;
            this.status({fill: 'green', shape: 'ring', text: 'connected, sid: ' + payload.sid});
  
            break;
          default:
            break;
        }

        this.lastMsgTime = Date.now();
        this.send([msg]);
      });

      //listen for incoming messages
      this.on('input', function (msg) {
        let command = {};
        if (msg.model === 'plug') {
          command = {
            sid: `158d00${msg.sid}`,
            cmd: 'write',
            model: 'plug',
            data: msg.payload
          };
        } else {
          command = {
            sid: this.sid,
            cmd: 'write',
            model: 'gateway',
            data: msg.payload
          };
        }
        this.gateway.sendCommand(command);
      });
    } else {
      //initial status
      this.status({fill: 'grey', shape: 'ring', text: 'not configured'});
    }
  }

  RED.nodes.registerType('xiaomi-gateway', XiaomiGatewayNode);
};